{
  "swagger": "2.0",
  "info": {
    "title": "Go2Study API",
    "description": "",
    "version": "1.0.0"
  },
  "produces": ["application/json"],
  "host": "localhost:8080",
  "basePath": "/1.0",
  "paths": {
  
  "/users/{pcn}/active": {
    
    "put": {
      "summary": "Update the online state of a given user. Used for providing the IP of the current session, so that communication can be done directly. If the user is not active - communication is achieved through Push notifications.",
      "description":"",
      "x-swagger-router-controller": "User",
      "tags": ["User"],
      "operationId": "usersPcnActivePut",
      "parameters": [
        {
  "name" : "pcn",
  "in" : "path",
  "description" : "User ID",
  "required" : true,
  "type" : "string"
},
        {
  "name" : "ipaddress",
  "in" : "formData",
  "description" : "The current IP address, which the client can be identified with. Default value = \"deactivate\" - removes the currently set IP address, this way marking him as not online and delegating all communications through push notifications.",
  "required" : false,
  "type" : "string"
}
        
      ],
      "responses": {
        "200": {
  "description" : "Indication wheter the update of the the ip was successful.",
  "schema" : {
    "$ref" : "#/definitions/Pcnlist"
  }
}
        
        
      }
    } 
    
  } ,
  
  "/users/{pcnrequired}/events/{id}": {
    
    "get": {
      "summary": "Get list of all favourite users",
      "description":"",
      "x-swagger-router-controller": "User",
      "tags": ["User"],
      "operationId": "usersPcnrequiredEventsIdGet",
      "parameters": [
        {
  "name" : "pcnrequired",
  "in" : "path",
  "description" : "User ID",
  "required" : true,
  "type" : "string"
},
        {
  "name" : "id",
  "in" : "path",
  "description" : "ID of unspecified type. Used for events/groups identification.",
  "required" : true,
  "type" : "integer"
},
        {
  "name" : "query",
  "in" : "query",
  "description" : "Non-specific query search term. Can be used for filtering the results by name of group, event, pcn, class, department & more.",
  "required" : false,
  "type" : "string"
}
        
      ],
      "responses": {
        "200": {
  "description" : "An array of pcn numbers",
  "schema" : {
    "$ref" : "#/definitions/Pcnlist"
  }
}
        
        
      }
    } ,
    
    "put": {
      "summary": "Update information about an existing event",
      "description":"",
      "x-swagger-router-controller": "User",
      "tags": ["User"],
      "operationId": "usersPcnrequiredEventsIdPut",
      "parameters": [
        {
  "name" : "pcnrequired",
  "in" : "path",
  "description" : "User ID",
  "required" : true,
  "type" : "string"
},
        {
  "name" : "id",
  "in" : "path",
  "description" : "ID of unspecified type. Used for events/groups identification.",
  "required" : true,
  "type" : "integer"
},
        {
  "name" : "name",
  "in" : "formData",
  "description" : "Name of group/event",
  "required" : true,
  "type" : "string"
}
        
      ],
      "responses": {
        "200": {
  "description" : "Information has being updated."
}
        
        
      }
    } ,
    
    "post": {
      "summary": "Add a user to your list of favourites",
      "description":"",
      "x-swagger-router-controller": "User",
      "tags": ["User"],
      "operationId": "usersPcnrequiredEventsIdPost",
      "parameters": [
        {
  "name" : "pcnrequired",
  "in" : "path",
  "description" : "User ID",
  "required" : true,
  "type" : "string"
},
        {
  "name" : "id",
  "in" : "path",
  "description" : "ID of unspecified type. Used for events/groups identification.",
  "required" : true,
  "type" : "integer"
},
        {
  "name" : "name",
  "in" : "formData",
  "description" : "Name of group/event",
  "required" : true,
  "type" : "string"
}
        
      ],
      "responses": {
        "201": {
  "description" : "User has been added to the favourites list"
}
        
        
      }
    } ,
    
    "delete": {
      "summary": "Remove user from favourites list",
      "description":"",
      "x-swagger-router-controller": "User",
      "tags": ["User"],
      "operationId": "usersPcnrequiredEventsIdDelete",
      "parameters": [
        {
  "name" : "pcnrequired",
  "in" : "path",
  "description" : "User ID",
  "required" : true,
  "type" : "string"
},
        {
  "name" : "id",
  "in" : "path",
  "description" : "ID of unspecified type. Used for events/groups identification.",
  "required" : true,
  "type" : "integer"
}
        
      ],
      "responses": {
        "200": {
  "description" : "User has being removed from your list of favourites"
}
        
        
      }
    } 
    
  } ,
  
  "/users/{pcnrequired}/favourites": {
    
    "get": {
      "summary": "Get list of all favourite users",
      "description":"",
      "x-swagger-router-controller": "User",
      "tags": ["User"],
      "operationId": "usersPcnrequiredFavouritesGet",
      "parameters": [
        {
  "name" : "pcnrequired",
  "in" : "path",
  "description" : "User ID",
  "required" : true,
  "type" : "string"
}
        
      ],
      "responses": {
        "200": {
  "description" : "An array of pcn numbers",
  "schema" : {
    "$ref" : "#/definitions/Pcnlist"
  }
}
        
        
      }
    } ,
    
    "post": {
      "summary": "Add a user to your list of favourites",
      "description":"",
      "x-swagger-router-controller": "User",
      "tags": ["User"],
      "operationId": "usersPcnrequiredFavouritesPost",
      "parameters": [
        {
  "name" : "pcnrequired",
  "in" : "path",
  "description" : "User ID",
  "required" : true,
  "type" : "string"
},
        {
  "name" : "pcn",
  "in" : "query",
  "description" : "User ID",
  "required" : true,
  "type" : "string"
}
        
      ],
      "responses": {
        "201": {
  "description" : "User has been added to the favourites list"
}
        
        
      }
    } ,
    
    "delete": {
      "summary": "Remove user from favourites list",
      "description":"",
      "x-swagger-router-controller": "User",
      "tags": ["User"],
      "operationId": "usersPcnrequiredFavouritesDelete",
      "parameters": [
        {
  "name" : "pcnrequired",
  "in" : "path",
  "description" : "User ID",
  "required" : true,
  "type" : "string"
},
        {
  "name" : "pcn",
  "in" : "query",
  "description" : "User ID",
  "required" : true,
  "type" : "string"
}
        
      ],
      "responses": {
        "200": {
  "description" : "User has being removed from your list of favourites"
}
        
        
      }
    } 
    
  } ,
  
  "/users/{pcn}": {
    
    "get": {
      "summary": "All Users",
      "description":"Get a list of all users registered with Go2Study",
      "x-swagger-router-controller": "User",
      "tags": ["User"],
      "operationId": "usersPcnGet",
      "parameters": [
        {
  "name" : "pcn",
  "in" : "path",
  "description" : "User ID",
  "required" : true,
  "type" : "string"
},
        {
  "name" : "user",
  "in" : "query",
  "description" : "Query for finding people. Can be part of name/office, start of PersonalTitle/Id/Department",
  "required" : false,
  "type" : "string"
}
        
      ],
      "responses": {
        "200": {
  "description" : "An array of Users",
  "schema" : {
    "type" : "array",
    "items" : {
      "$ref" : "#/definitions/User"
    }
  }
}
        
        
      }
    } ,
    
    "put": {
      "summary": "Update user",
      "description":"Update user information, which is stored on top of the existing data in the Fontys system.",
      "x-swagger-router-controller": "User",
      "tags": ["User"],
      "operationId": "usersPcnPut",
      "parameters": [
        {
  "name" : "pcn",
  "in" : "path",
  "description" : "User ID",
  "required" : true,
  "type" : "string"
},
        {
  "name" : "photo",
  "in" : "query",
  "description" : "Photograph",
  "required" : false,
  "type" : "string"
}
        
      ],
      "responses": {
        "200": {
  "description" : "User data has being updated"
}
        
        
      }
    } ,
    
    "post": {
      "summary": "Create User",
      "description":"Save information when a User logs in for the first time",
      "x-swagger-router-controller": "User",
      "tags": ["User"],
      "operationId": "usersPcnPost",
      "parameters": [
        {
  "name" : "pcn",
  "in" : "path",
  "description" : "User ID",
  "required" : true,
  "type" : "string"
},
        {
  "name" : "firstName",
  "in" : "formData",
  "description" : "The last name of the user",
  "required" : true,
  "type" : "string"
},
        {
  "name" : "lastName",
  "in" : "formData",
  "description" : "The last name of the user",
  "required" : true,
  "type" : "string"
},
        {
  "name" : "email",
  "in" : "formData",
  "description" : "The fontys email of the user",
  "required" : true,
  "type" : "string"
},
        {
  "name" : "photo",
  "in" : "query",
  "description" : "Photograph",
  "required" : false,
  "type" : "string"
}
        
      ],
      "responses": {
        "201": {
  "description" : "User has been created"
}
        
        
      }
    } 
    
  } ,
  
  "/users/{pcnrequired}/groups/{id}": {
    
    "get": {
      "summary": "Get list of all groups, which you are part of.",
      "description":"",
      "x-swagger-router-controller": "User",
      "tags": ["User"],
      "operationId": "usersPcnrequiredGroupsIdGet",
      "parameters": [
        {
  "name" : "pcnrequired",
  "in" : "path",
  "description" : "User ID",
  "required" : true,
  "type" : "string"
},
        {
  "name" : "id",
  "in" : "path",
  "description" : "ID of unspecified type. Used for events/groups identification.",
  "required" : true,
  "type" : "integer"
},
        {
  "name" : "query",
  "in" : "query",
  "description" : "Non-specific query search term. Can be used for filtering the results by name of group, event, pcn, class, department & more.",
  "required" : false,
  "type" : "string"
}
        
      ],
      "responses": {
        "200": {
  "description" : "An array of pcn numbers",
  "schema" : {
    "$ref" : "#/definitions/Pcnlist"
  }
}
        
        
      }
    } 
    
  } ,
  
  
  "/events/{id}": {
    
    "get": {
      "summary": "Get list of events, according to the search query. Default all - returns all public events",
      "description":"",
      "x-swagger-router-controller": "Event",
      "tags": ["Event"],
      "operationId": "eventsIdGet",
      "parameters": [
        {
  "name" : "id",
  "in" : "path",
  "description" : "ID of unspecified type. Used for events/groups identification.",
  "required" : true,
  "type" : "integer"
},
        {
  "name" : "query",
  "in" : "query",
  "description" : "Non-specific query search term. Can be used for filtering the results by name of group, event, pcn, class, department & more.",
  "required" : false,
  "type" : "string"
}
        
      ],
      "responses": {
        "200": {
  "description" : "An array of event objects",
  "schema" : {
    "type" : "array",
    "items" : {
      "$ref" : "#/definitions/Event"
    }
  }
}
        
        
      }
    } ,
    
    "put": {
      "summary": "Update details about an existing event",
      "description":"",
      "x-swagger-router-controller": "Event",
      "tags": ["Event"],
      "operationId": "eventsIdPut",
      "parameters": [
        {
  "name" : "id",
  "in" : "path",
  "description" : "ID of unspecified type. Used for events/groups identification.",
  "required" : true,
  "type" : "integer"
},
        {
  "name" : "nameopt",
  "in" : "formData",
  "description" : "Name of group/event (used in PUT calls)",
  "required" : false,
  "type" : "string"
},
        {
  "name" : "startimeopt",
  "in" : "formData",
  "description" : "Start time of an event",
  "required" : false,
  "type" : "string",
  "format" : "date-time"
},
        {
  "name" : "durationopt",
  "in" : "formData",
  "description" : "Duration of the event (used in PUT calls)",
  "required" : false,
  "type" : "number",
  "format" : "double"
},
        {
  "name" : "description",
  "in" : "formData",
  "description" : "Description of event.",
  "required" : false,
  "type" : "string"
},
        {
  "name" : "locationopt",
  "in" : "formData",
  "description" : "Location of the event.",
  "required" : false,
  "type" : "string"
}
        
      ],
      "responses": {
        "201": {
  "description" : "User has updated information about an event."
}
        
        
      }
    } ,
    
    "delete": {
      "summary": "Remove event from my calendar",
      "description":"",
      "x-swagger-router-controller": "Event",
      "tags": ["Event"],
      "operationId": "eventsIdDelete",
      "parameters": [
        {
  "name" : "id",
  "in" : "path",
  "description" : "ID of unspecified type. Used for events/groups identification.",
  "required" : true,
  "type" : "integer"
}
        
      ],
      "responses": {
        "200": {
  "description" : "Event has being removed from my calendar"
}
        
        
      }
    } 
    
  } ,
  
  "/events": {
    
    "post": {
      "summary": "Create a new event",
      "description":"",
      "x-swagger-router-controller": "Event",
      "tags": ["Event"],
      "operationId": "eventsPost",
      "parameters": [
        {
  "name" : "name",
  "in" : "formData",
  "description" : "Name of group/event",
  "required" : true,
  "type" : "string"
},
        {
  "name" : "startime",
  "in" : "formData",
  "description" : "Start time of an event",
  "required" : true,
  "type" : "string",
  "format" : "date-time"
},
        {
  "name" : "location",
  "in" : "formData",
  "description" : "Location of the event",
  "required" : true,
  "type" : "string"
},
        {
  "name" : "startimeopt",
  "in" : "formData",
  "description" : "Start time of an event",
  "required" : false,
  "type" : "number",
  "format" : "double"
},
        {
  "name" : "description",
  "in" : "formData",
  "description" : "Description of event.",
  "required" : false,
  "type" : "string"
}
        
      ],
      "responses": {
        "201": {
  "description" : "New group has being created"
}
        
        
      }
    } 
    
  } ,
  
  
  "/groups": {
    
    "get": {
      "summary": "Get list of events, according to the search query. Default all - returns all public events",
      "description":"",
      "x-swagger-router-controller": "Group",
      "tags": ["Group"],
      "operationId": "groupsGet",
      "parameters": [
        {
  "name" : "query",
  "in" : "query",
  "description" : "Non-specific query search term. Can be used for filtering the results by name of group, event, pcn, class, department & more.",
  "required" : false,
  "type" : "string"
}
        
      ],
      "responses": {
        "200": {
  "description" : "An array of event objects",
  "schema" : {
    "type" : "array",
    "items" : {
      "$ref" : "#/definitions/Group"
    }
  }
}
        
        
      }
    } ,
    
    "put": {
      "summary": "Update details about an existing group",
      "description":"",
      "x-swagger-router-controller": "Group",
      "tags": ["Group"],
      "operationId": "groupsPut",
      "parameters": [
        {
  "name" : "groupid",
  "in" : "formData",
  "description" : "ID of unspecified type. Used for events/groups identification.",
  "required" : true,
  "type" : "integer"
},
        {
  "name" : "name",
  "in" : "formData",
  "description" : "Name of group/event",
  "required" : true,
  "type" : "string"
},
        {
  "name" : "description",
  "in" : "formData",
  "description" : "Description of event.",
  "required" : false,
  "type" : "string"
}
        
      ],
      "responses": {
        "201": {
  "description" : "User has updated information about a group"
}
        
        
      }
    } ,
    
    "post": {
      "summary": "Create a new group",
      "description":"",
      "x-swagger-router-controller": "Group",
      "tags": ["Group"],
      "operationId": "groupsPost",
      "parameters": [
        {
  "name" : "name",
  "in" : "formData",
  "description" : "Name of group/event",
  "required" : true,
  "type" : "string"
},
        {
  "name" : "pcnlist",
  "in" : "formData",
  "description" : "List of pcn numbers",
  "required" : true,
  "type" : "array",
  "items" : {
    "type" : "integer"
  },
  "collectionFormat" : "multi"
},
        {
  "name" : "description",
  "in" : "formData",
  "description" : "Description of event.",
  "required" : false,
  "type" : "string"
}
        
      ],
      "responses": {
        "201": {
  "description" : "New group has being created"
}
        
        
      }
    } ,
    
    "delete": {
      "summary": "Remove myself from a group",
      "description":"",
      "x-swagger-router-controller": "Group",
      "tags": ["Group"],
      "operationId": "groupsDelete",
      "parameters": [
        {
  "name" : "groupid",
  "in" : "formData",
  "description" : "ID of unspecified type. Used for events/groups identification.",
  "required" : true,
  "type" : "integer"
}
        
      ],
      "responses": {
        "200": {
  "description" : "User has being removed from a specified group"
}
        
        
      }
    } 
    
  } ,
  
  "/groups/{id}/events": {
    
    "get": {
      "summary": "Get all events of a specified group",
      "description":"",
      "x-swagger-router-controller": "Group",
      "tags": ["Group"],
      "operationId": "groupsIdEventsGet",
      "parameters": [
        {
  "name" : "id",
  "in" : "path",
  "description" : "ID of unspecified type. Used for events/groups identification.",
  "required" : true,
  "type" : "integer"
}
        
      ],
      "responses": {
        "200": {
  "description" : "An array of event objects",
  "schema" : {
    "type" : "array",
    "items" : {
      "$ref" : "#/definitions/Event"
    }
  }
}
        
        
      }
    } 
    
  } 
  
  }, "definitions": {
  "User": {
  "type" : "object",
  "properties" : {
    "id" : {
      "type" : "string"
    },
    "im_status" : {
      "type" : "string",
      "description" : "User's online/offline status for messages"
    },
    "gps_location" : {
      "type" : "string",
      "description" : "Longitude, Latitude"
    },
    "photo" : {
      "type" : "string",
      "description" : "URL to User's photograph on server"
    }
  }
},"Event": {
  "type" : "object",
  "properties" : {
    "id" : {
      "type" : "integer"
    },
    "startTime" : {
      "type" : "string"
    },
    "endTime" : {
      "type" : "string"
    },
    "location" : {
      "type" : "string"
    },
    "description" : {
      "type" : "string"
    }
  }
},"Group": {
  "type" : "object",
  "properties" : {
    "id" : {
      "type" : "string"
    },
    "name" : {
      "type" : "string"
    },
    "pcnlist" : {
      "type" : "array",
      "items" : {
        "type" : "integer"
      }
    }
  }
},"Pcnlist": {
  "type" : "array",
  "items" : {
    "type" : "string"
  }
}
  }
}
